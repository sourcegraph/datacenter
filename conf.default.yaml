# cluster specifies the Docker images to use for each service along with replica counts and resource specs where they
# are tunable.
cluster:
  frontend:
    replicas: 1
    containers:
      frontend:
        limits:
          cpu: "2"
          memory: 2G
        requests:
          cpu: "2"
          memory: 1G
  searcher:
    replicas: 1
    containers:
      searcher:
        limits:
          cpu: "2"
          memory: 2G
        requests:
          cpu: "500m"
          memory: "500M"
  symbols:
    replicas: 1
    containers:
      symbols:
        limits:
          cpu: "2"
          memory: 2G
        requests:
          cpu: "500m"
          memory: "500M"
  gitserver:
    shards: 1
    containers:
      gitserver:
        limits:
          cpu: "4"
          memory: 8G
        requests:
          cpu: "500m"
          memory: 1G
  indexedSearch:
    containers:
      zoekt-indexserver:
        limits:
          cpu: "2"
          memory: 4G
        requests:
          cpu: "500m"
          memory: 2Gi
      zoekt-webserver:
        limits:
          cpu: "2"
          memory: 4G
        requests:
          cpu: "500m"
          memory: 2Gi
      # # Uncomment this to add a Kubernetes node selector to the pods. This is usually unnecessary for most components, unless
      # # you have a heterogeneous cluster where you need to ensure certain more resource-hungry pods (e.g., indexedSearch) are
      # # assigned to larger nodes.
      # nodeSelector:
      #   beta.kubernetes.io/instance-type: i3.4xlarge
  lspProxy:
    containers:
      lsp-proxy:
        limits:
          cpu: "1"
          memory: 8Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  xlangGo:
    replicas: 1
    containers:
      xlang-go:
        limits:
          cpu: "4"
          memory: 8Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  xlangJava:
    replicas: 1
    containers:
      xlang-java:
        limits:
          cpu: "4"
          memory: 8Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  xlangJavascriptTypescript:
    replicas: 1
    containers:
      xlang-javascript-typescript:
        limits:
          cpu: "4"
          memory: 5Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  xlangPython:
    replicas: 1
    containers:
      xlang-python:
        limits:
          cpu: "500m"
          memory: 1G
        requests:
          cpu: "500m"
          memory: 1G
  xlangPHP:
    replicas: 1
    containers:
      xlang-php:
        limits:
          cpu: "4"
          memory: 8Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  storageClass:
    # name is the name of the storage class used by the persistent volumes generated in this chart. This should be
    # left as is, unless you are using an already existing storage class.
    name: default

    # # REQUIRED: create should be set to "gcp", "aws", or "no". Setting to "gcp" or "aws" will create a new storage class for
    # # the designated infrastructure provider. If set to "none", a storage class with the designated name must be
    # # created separately from the config generated by this chart
    # create: none

    # # zone should be set to the zone in which your Kubernetes cluster resides
    # zone: us-west1-a
    
  # # securityContext, if set, overrides the standard pod security context in all pods
  # securityContext:
  #   fsGroup: 1000

# conf specifies the Sourcegraph app configuration. This is analogous to what you would set on the configuration page in
# the admin UI. For legacy reasons, it can include some configuration fields that are only relevant to Data Center.
#
# For a comprehensive list of all conf options, visit https://about.sourcegraph.com/docs/config/settings.
conf: {
  # Publicly accessible URL to web app (e.g., what you type into your browser).
  "appURL": "http://localhost:3080",

  # Port exposed on all nodes directing HTTP traffic to sourcegraph-frontend pod.
  "httpNodePort": 30080,

  # Allows new visitors to sign up for accounts. The sign-up page will be enabled and accessible to all visitors.
  #
  # SECURITY: If the site has no users (i.e., during initial setup), it will always allow the first user to sign up and become site admin without any approval (first user to sign up becomes the admin).
  #
  # Requires auth.provider == "builtin".
  "auth.allowSignup": true,

  # The authentication provider to use for identifying and signing in users. Defaults to built-in authentication.
  #
  # This element must be one of the following enum values:
  #
  #   builtin
  #   openidconnect
  #   saml
  #   http-header
  "auth.provider": "builtin",

  # The size of disk to use for each gitserver instance
  "gitserverDiskSize": "200Gi",

  # The size of disk to used for search indexes (this should typically be the gitserverDiskSize multipled by the number of gitserver shards)
  "indexedSearchDiskSize": "200Gi",

  # Uncomment the languages for which you wish to enable code intelligence
  "langservers": [
    # {
    #   "language": "go",
    # },
    # {
    #   "language": "java",
    # },
    # {
    #   "language": "javascript",
    # },
    # {
    #   "language": "typescript",
    # },
    # {
    #   "language": "python",
    # },
    # {
    #   "language": "php",
    # },
  ],
}
