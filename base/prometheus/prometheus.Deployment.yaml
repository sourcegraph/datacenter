apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Collects metrics and aggregates them into graphs.
  labels:
    app.kubernetes.io/component: prometheus
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: prometheus
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
        deploy: sourcegraph
    spec:
      containers:
        - image: "index.docker.io/sourcegraph/prometheus:insiders@sha256:ff010583e8b9f6afc4991037c07e7987b57041bb000c23747b72deefee3ca39f"
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          name: prometheus
          ports:
            - containerPort: 9090
              name: http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            limits:
              cpu: '2'
              memory: "6G"
            requests:
              cpu: "500m"
              memory: "6G"
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /prometheus
              name: data
            - mountPath: /sg_prometheus_add_ons
              name: config
      securityContext:
        runAsUser: 0
      serviceAccountName: prometheus
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: prometheus
        - configMap:
            defaultMode: 511
            name: prometheus
          name: config
