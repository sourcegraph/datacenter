apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Postgres database for various data.
  labels:
    deploy: sourcegraph
  name: pgsql
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pgsql
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pgsql
        group: backend
    spec:
      containers:
      - env:
        image: index.docker.io/sourcegraph/postgres-11.4:19-07-15_63c77a05@sha256:21881633991e9548319fcf5b9e2777ddba6404b7d551dedde9e39e5b9287a982
        terminationMessagePolicy: FallbackToLogsOnError
        readinessProbe:
          exec:
            command:
              - /ready.sh
        livenessProbe:
          initialDelaySeconds: 15
          exec:
            command:
              - /liveness.sh
        name: pgsql
        ports:
        - containerPort: 5432
          name: pgsql
        resources:
          limits:
            cpu: "4"
            memory: 2Gi
        volumeMounts:
        - mountPath: /data
          name: disk
      - env:
        - name: DATA_SOURCE_NAME
          value: postgres://sg:@localhost:5432/?sslmode=disable
        image: wrouesnel/postgres_exporter:v0.5.1@sha256:b9bad0d21bcb73b347ab75add47fd024d5ff82718b9369457591243dff26cc09
        terminationMessagePolicy: FallbackToLogsOnError
        name: pgsql-exporter
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
      securityContext:
        runAsUser: 0
      volumes:
      - name: disk
        persistentVolumeClaim:
          claimName: pgsql
