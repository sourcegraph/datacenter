apiVersion: apps/v1
kind: StatefulSet
metadata:
annotations:
  description: Stores clones of repositories to perform Git operations.
labels:
  app.kubernetes.io/component: gitserver
  deploy: sourcegraph
  sourcegraph-resource-requires: no-cluster-admin
name: gitserver
spec:
replicas: 1
revisionHistoryLimit: 10
selector:
  matchLabels:
    app: gitserver
serviceName: gitserver
template:
  metadata:
    labels:
      app: gitserver
      deploy: sourcegraph
      group: backend
      type: gitserver
  spec:
    containers:
      - args:
          - run
        image: "index.docker.io/sourcegraph/gitserver:insiders@sha256:ec120a14389ff382b2e92a6a5741ccd72fba304506fc3ad6c56b9c0dcaa105e4"
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: rpc
          timeoutSeconds: 5
        name: gitserver
        ports:
          - containerPort: 3178
            name: rpc
        resources:
          limits:
            cpu: '4'
            memory: "8G"
          requests:
            cpu: '4'
            memory: "8G"
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - mountPath: /data/repos
            name: repos
      - args:
          - "--reporter.grpc.host-port=jaeger-collector:14250"
          - "--reporter.type=grpc"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
        image: "index.docker.io/sourcegraph/jaeger-agent:insiders@sha256:60c9a814b1f4a6547b45550ee4ba58c0e097802e5b8fb8b0f1f7d5f51dd74851"
        name: jaeger-agent
        ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 5778
            protocol: TCP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
        resources:
          limits:
            cpu: '1'
            memory: "500M"
          requests:
            cpu: "100m"
            memory: "100M"
    securityContext:
      runAsUser: 0
    volumes:
      - name: repos
updateStrategy:
  type: RollingUpdate
volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: repos
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "200Gi"
      storageClassName: sourcegraph
