#!/bin/bash

assertInstalled() {
  command -v "$1" >/dev/null 2>&1
}

if ! assertInstalled helm || ! assertInstalled yq; then
  echo "You need to install dependencies: brew install helm yq"
  exit 1
fi

assertStdin() {
  cat > stdin
  if ! [ "$(cat stdin)" = "$1" ]; then
    rm stdin
    echo
    echo "$2"
    echo "- Expected $1 but got $(cat stdin)"
    exit 1
  fi
  rm stdin
}

helm template . \
  --set cluster.storageClass.create=none \
  --set site.langservers[0].language=html \
  | yq "select(.kind == \"Deployment\" and .metadata.name == \"lsp-proxy\")" \
  | yq ".spec.template.spec.containers[0].env | any(. == {name:\"LANGSERVER_HTML\", value:\"tcp://xlang-html:8080\"})" \
  | assertStdin "true" "Specifying an experimental language server should set an environment variable on lsp-proxy."

helm template . \
  --set cluster.storageClass.create=none \
  --set site.langservers[0].language=html \
  --set site.langservers[0].address=tcp://1.2.3.4:1234 \
  | yq "select(.kind == \"Deployment\" and .metadata.name == \"lsp-proxy\")" \
  | yq ".spec.template.spec.containers[0].env | any(. == {name:\"LANGSERVER_HTML\", value:\"tcp://1.2.3.4:1234\"})" \
  | assertStdin "true" "langservers[].address should be respected."

echo "All tests passed."
