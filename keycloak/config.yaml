apiVersion: v1
kind: ConfigMap
metadata:
  name: sourcegraph-keycloak-config
  namespace: default
data:
  keycloak-proxy-config.yaml: |
    # is the url for retrieve the openid configuration - normally the <server>/.well-known/openid-configuration
    discovery-url: https://corpauth.service.improbable.io/.well-known/openid-configuration
    # the client id for the 'client' application
    client-id: 1057561464504-lvfli8l8d4a6ii7eof0bmaoe5rclr4mk.apps.googleusercontent.com
    # the secret associated to the 'client' application
    client-secret: 0a700a6f1f51aabaaafff0417ff0f66f305b473433a281e2d46f57b37a3825a6
    # the interface definition you wish the proxy to listen, all interfaces is specified as ':<port>'
    listen: 0.0.0.0:443
    # redirect any HTTP requests to HTTPS
    enable-https-redirection: true
    # redirection url for the oauth callback url, defaults to host header is absent
    redirection-url: https://code.i8e.io/
    # Turn on Prometheus metrics
    enable-metrics: true
    # whether to request offline access and use a refresh token
    enable-refresh-tokens: true
    # Make the auth cookies persist beyond one session
    enable-session-cookies: false
    # URL for talking to redis, used for storing user refresh tokens
    store-url: redis://redis-store:6379
    # log all incoming requests
    log-requests: true
    # log in json format
    log-json-format: true
    # debug output
    # TODO: Mark this false once we have the auth stuff all doing what we want
    verbose: true
    # the encryption key used to encode the session state
    encryption-key: vGcLt8ZUdPX5fXhtLZaPHZkGWHZrT6Td
    # the upstream endpoint which we should proxy request
    upstream-url: http://sourcegraph-frontend:30080
    # upstream-keepalives specified wheather you want keepalive on the upstream endpoint
    upstream-keepalives: true
    # enables extra security features
    enable-security-filter: true
    # Use a 303 for invalid auth redirects, which unbreaks the Sourcegraph Chrome extension
    invalid-auth-redirects-with-303: true
    # use the code.i8e.io TLS certs from secrets.
    tls-cert: /ssl/code_i8e_io.crt
    tls-private-key: /ssl/code_i8e_io.key
    # tell corpauth to give us list of groups (so that we can use match-claims perms)
    scopes:
      - groups
    # deny access by default
    enable-default-deny: true
    # don't use the Authorization header, since we're using other headers
    enable-authorization-header: false
    # This forces all non-whitelisted requests to have the perm 'sen-eng' in their claims.
    # This is a managed group, containing all Engineers with sensitive code access
    match-claims:
        perms: sen-eng
    
    resources:
    # Allow scraping of the healthz endpoint
    - uri: /healthz
      white-listed: true
    
    # allow only those in group 'perms-eng' to access Sourcegraph
    - uri: /*
