# This file defines the default values passed to this Helm chart. The user-provided `values.yaml`
# will be merged with this one and the result will be passed to the Helm templating stage.  At the
# top level, these values are separated into three sections: `const`, `cluster`, and `site`,
# documented below.

# const defines configuration constants that generally should not be changed unless testing out experimental or pre-release features.
const:
  frontend:
    image: docker.sourcegraph.com/frontend:18969_2018-07-31_6ae5417
  searcher:
    image: docker.sourcegraph.com/searcher:18570_2018-07-19_56d5400_patch
  symbols:
    image: docker.sourcegraph.com/symbols:18571_2018-07-19_56d5400_patch
  gitserver:
    image: docker.sourcegraph.com/gitserver:18720_2018-07-23_a31cdfb
  githubProxy:
    image: docker.sourcegraph.com/github-proxy:18758_2018-07-24_1ed482c
  indexedSearch:
    image: docker.sourcegraph.com/zoekt:18-05-30_3d2275e
  indexer:
    image: docker.sourcegraph.com/indexer:18231_2018-07-12_21a0f96
  lspProxy:
    image: docker.sourcegraph.com/lsp-proxy:18370_2018-07-16_b65e3d3
  queryRunner:
    image: docker.sourcegraph.com/query-runner:18233_2018-07-12_21a0f96
  repoUpdater:
    image: docker.sourcegraph.com/repo-updater:18842_2018-07-25_1e966e0
  pgsql:
    exporterImage: docker.sourcegraph.com/pgsql-exporter:a294a9b6d83c139d3e1217f02c8f80a54cbf73ac
    image: docker.sourcegraph.com/postgres:9.4
  syntectServer:
    image: docker.sourcegraph.com/syntect_server:624a1a2
  xlangGo:
    image: docker.sourcegraph.com/xlang-go:18575_2018-07-20_a470dcb
  xlangJava:
    image: docker.sourcegraph.com/xlang-java-skinny:2018-05-10-1621
  xlangJavascriptTypescript:
    image: docker.sourcegraph.com/xlang-javascript-typescript:00081_2018-07-20_09dabb1
  npmProxy:
    image: docker.sourcegraph.com/npm-proxy:9d593e267b6f5e86caeb29da37f140c5f5f4c8b2
  xlangPython:
    image: docker.sourcegraph.com/xlang-python:18892_2018-07-27_ddc9943
  xlangPHP:
    image: docker.sourcegraph.com/xlang-php:00037_2018-07-11_faea319
  redis:
    image: docker.sourcegraph.com/redis:18-02-07_8205764_3.2-alpine
    exporterImage: docker.sourcegraph.com/redis_exporter:18-02-07_bb60087_v0.15.0
  jaeger:
    agent:
      image: docker.sourcegraph.com/jaeger-agent
    query:
      image: docker.sourcegraph.com/jaeger-query
    cassandra:
      image: docker.sourcegraph.com/cassandra:3
    collector:
      image: docker.sourcegraph.com/jaeger-collector
  podTmpGC:
    image: docker.sourcegraph.com/pod-tmp-gc:latest
  prometheus:
    image: docker.sourcegraph.com/prometheus:v1.4.1
  configMapReload:
    image: docker.sourcegraph.com/configmap-reload:v0.1
  authProxy:
    image: docker.sourcegraph.com/auth-proxy:latest
  alertManager:
    image: docker.sourcegraph.com/alertmanager:v0.4.2
  experimentalLangServers:
    bash:
      image: sourcegraph/codeintel-bash:00239_2018-05-31_6b6cac4
    clojure:
      image: sourcegraph/codeintel-clojure:00231_2018-05-31_eef495b
    cpp:
      image: sourcegraph/codeintel-cpp:00239_2018-05-31_6b6cac4
    cs:
      image: sourcegraph/codeintel-csharp:00225_2018-05-26_26f55a3
    css:
      image: sourcegraph/codeintel-css:00239_2018-05-31_6b6cac4
    dockerfile:
      image: sourcegraph/codeintel-docker:00239_2018-05-31_6b6cac4
    elixir:
      image: sourcegraph/codeintel-elixir:00239_2018-05-31_6b6cac4
    html:
      image: sourcegraph/codeintel-html:00239_2018-05-31_6b6cac4
    lua:
      image: sourcegraph/codeintel-lua:00225_2018-05-26_26f55a3
    ocaml:
      image: sourcegraph/codeintel-ocaml:00239_2018-05-31_6b6cac4
    r:
      image: sourcegraph/codeintel-r:00239_2018-05-31_6b6cac4
    ruby:
      image: sourcegraph/codeintel-ruby:00239_2018-05-31_6b6cac4
    rust:
      image: sourcegraph/codeintel-rust:00239_2018-05-31_6b6cac4

# cluster specifies the Docker images to use for each service along with replica counts and resource specs where they
# are tunable.
cluster:
  # RBAC is enabled by default. Some Kubernetes environments do not permit RBAC. Set to "disabled" to disable and
  # prevent RBAC objects from being generated.
  rbac: enabled
  frontend:
    replicas: 1
    containers:
      frontend:
        # # Additional user-provided environment variables can be added
        # env:
        #   MY_USER_PROVIDED_CUSTOM_ENV_VAR: value
        limits:
          cpu: "2"
          memory: 2G
        requests:
          cpu: "2"
          memory: 1G
  searcher:
    replicas: 1
    containers:
      searcher:
        limits:
          cpu: "2"
          memory: 2G
        requests:
          cpu: "500m"
          memory: "500M"
  symbols:
    replicas: 1
    containers:
      symbols:
        limits:
          cpu: "2"
          memory: 2G
        requests:
          cpu: "500m"
          memory: "500M"
  gitserver:
    # Number of shards for caching git data. If you change this, you should also change indexedSearch.diskSize.
    shards: 1
    # Size of disk of each gitserver shard. If you change this, you should also change indexedSearch.diskSize.
    diskSize: 200Gi
    # # ssh is a map that describes the structure of gitserver's .ssh directory. If you have configured Sourcegraph
    # # to index a private git repository and clone via SSH, you'll need to add the appropriate files to this
    # # field.
    # ssh:
    #   known_hosts: "Set this to the desired value for the SSH known_hosts file."
    #   id_rsa: "Set this to the value of a private key authorized to clone repositories from the code host."
    containers:
      gitserver:
        limits:
          cpu: "4"
          memory: 8G
        requests:
          cpu: "500m"
          memory: 1G
  indexedSearch:
    # The size of disk to used for search indexes (this should typically be gitserver.diskSize multipled by gitserver.shards)
    diskSize: 200Gi
    containers:
      # zoekt-indexserver is CPU bound. The more CPU you allocate to it, the
      # lower lag between a new commit and it being indexed for search.
      zoekt-indexserver:
        limits:
          cpu: "4"
          memory: 4G
        requests:
          cpu: "500m"
          memory: 2Gi
      zoekt-webserver:
        limits:
          cpu: "2"
          memory: 4G
        requests:
          cpu: "500m"
          memory: 2Gi
    # # Uncomment this to add a Kubernetes node selector to the pods. This is usually unnecessary for most components, unless
    # # you have a heterogeneous cluster where you need to ensure certain more resource-hungry pods (e.g., indexedSearch) are
    # # assigned to larger nodes.
    # nodeSelector:
    #   beta.kubernetes.io/instance-type: i3.4xlarge
  lspProxy:
    containers:
      lsp-proxy:
        limits:
          cpu: "1"
          memory: 8Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  xlangGo:
    replicas: 1
    containers:
      xlang-go:
        limits:
          cpu: "4"
          memory: 8Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  xlangJava:
    replicas: 1
    containers:
      xlang-java:
        limits:
          cpu: "4"
          memory: 8Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  xlangJavascriptTypescript:
    replicas: 1
    containers:
      xlang-javascript-typescript:
        limits:
          cpu: "4"
          memory: 5Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  xlangPython:
    replicas: 1
    containers:
      xlang-python:
        limits:
          cpu: "500m"
          memory: 1G
        requests:
          cpu: "500m"
          memory: 1G
  xlangPHP:
    replicas: 1
    containers:
      xlang-php:
        limits:
          cpu: "4"
          memory: 8Gi
        requests:
          cpu: "500m"
          memory: 2Gi
  pgsql:
    volumes: []
    containers:
      pgsql:
        volumeMounts: []
  storageClass:
    # name is the name of the storage class used by the persistent volumes generated in this chart. This should be
    # left as is, unless you are using an already existing storage class.
    name: default

    # # REQUIRED: create should be set to "gcp", "aws", or "no". Setting to "gcp" or "aws" will create a new storage class for
    # # the designated infrastructure provider. If set to "none", a storage class with the designated name must be
    # # created separately from the config generated by this chart
    # create: none

    # # zone should be set to the zone in which your Kubernetes cluster resides
    # zone: us-west1-a

  # # securityContext, if set, overrides the standard pod security context in all pods
  # securityContext:
  #   fsGroup: 1000

  configVolume:
    # configVolume.defaultMode sets the filesystem mode for ConfigMap volumes
    defaultMode: 464

  # # commonVolumes lists volumes to be included with every pod
  # commonVolumes:
  # - name: ssl
  #   hostPath:
  #     path: /etc/ssl

  # # commonVolumeMounts lists volumeMounts to be attached to every container (these typically
  # # corespond to the volumes specified in commonVolumes).
  # commonVolumeMounts:
  # - mountPath: /etc/ssl
  #   name: ssl

  # # postgreSQL allows you to specify a custom PostgreSQL server which Sourcegraph will
  # # use for storing information.
  # postgreSQL:
  #   user: sg
  #   password: mysecret
  #   database: sg
  #   host: postgres.mycompany.org
  #   port: 5432
  #   sslMode: disable

  # # redis allows you to specify a custom Redis server which Sourcegraph will use
  # # for caching information and storing information (session data).
  # redis:
  #   cache: redis.mycompany.org:6379
  #   store: redis.mycompany.org:6379

# site is the Sourcegraph site configuration.
#
# For legacy reasons, it can include some configuration fields that are only relevant to Data Center.
#
# See all site config options at https://about.sourcegraph.com/docs/config/site.
site: {
  # Publicly accessible URL to web app (e.g., what you type into your browser).
  "appURL": "http://localhost:3080",

  # Port exposed on all nodes directing HTTP traffic to sourcegraph-frontend pod(s).
  "httpNodePort": 30080,

  # # Port exposed on all nodes directing HTTPS traffic to sourcegraph-frontend pod(s). Uncomment this
  # # to allow incoming HTTPS traffic.
  # httpsNodePort: 30081

  # # The authentication provider to use for identifying and signing in users. Only one entry is supported.
  # #
  # # The builtin auth provider with signup disallowed (shown below) means that after the initial site admin signs in, all other users must be invited.
  # #
  # "auth.providers": [{"type": "builtin", "allowSignup": false}],

  # Uncomment the languages for which you wish to enable code intelligence
  "langservers": [
    # {
    #   "language": "go",
    # },
    # {
    #   "language": "java",
    # },
    # {
    #   "language": "javascript",
    # },
    # {
    #   "language": "typescript",
    # },
    # {
    #   "language": "python",
    # },
    # {
    #   "language": "php",
    # },

    # WARNING experimental language servers follow - read about the caveats
    # before enabling them:
    # https://about.sourcegraph.com/docs/code-intelligence/experimental-language-servers#caveats-of-experimental-language-servers
    # {
    #   "language": "bash",
    # },
    # {
    #   "language": "clojure",
    # },
    # {
    #   "language": "cpp",
    # },
    # {
    #   "language": "cs",
    # },
    # {
    #   "language": "css",
    # },
    # {
    #   "language": "dockerfile",
    # },
    # {
    #   "language": "elixir",
    # },
    # {
    #   "language": "html",
    # },
    # {
    #   "language": "lua",
    # },
    # {
    #   "language": "ocaml",
    # },
    # {
    #   "language": "r",
    # },
    # {
    #   "language": "ruby",
    # },
    # {
    #   "language": "rust",
    # },
  ],
}
