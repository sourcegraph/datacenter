apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    description: Postgres database for various data.
  name: pgsql
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pgsql
        group: backend
    spec:
      containers:
      - env:
        - name: PGDATA
          value: /data/pgdata
        - name: POSTGRES_USER
          value: sg
        image: {{ .Values.cluster.pgsql.image }}
        livenessProbe:
          initialDelaySeconds: 15
          tcpSocket:
            port: 5432
        name: pgsql
        ports:
        - containerPort: 5432
          name: pgsql
        resources:
          limits:
            cpu: "4"
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1G
        volumeMounts:
        - mountPath: /data
          name: disk
      - env:
        - name: DATA_SOURCE_NAME
          value: postgres://sg:@localhost:5432/?sslmode=disable
        image: {{ .Values.cluster.pgsql.exporterImage }}
        name: pgsql-exporter
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
{{- include "securityContext" . | nindent 6 }}
{{- include "nodeSelector" (list .Values "pgsql") | nindent 6 | trimSuffix "\n      " }}
      volumes:
      - name: disk
        persistentVolumeClaim:
          claimName: pgsql
