{{- $global := . -}}
{{- $envVars := dict -}}
{{- include "collectConfigEnv" (dict "envVars" $envVars "Values" $global.Values "Files" $global.Files) }}
{{- include "collectTracingEnv" (dict "envVars" $envVars "Values" $global.Values) }}
{{- $_ := set $envVars "SRC_REPOS_DIR" "/data/repos" -}}
{{- $_ := set $envVars "ORIGIN_MAP" $global.Values.site.gitOriginMap -}}
{{- include "collectEnv" (list $envVars .Values.cluster.gitserver.containers.gitserver.env) -}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Stores clones of repositories to perform Git operations.
  name: gitserver
spec:
  serviceName: gitserver
  selector:
    matchLabels:
      app: gitserver
  replicas: {{ required ".Values.cluster.gitserver.shards required" .Values.cluster.gitserver.shards | int }}
  revisionHistoryLimit: 10
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gitserver
        group: backend
        type: gitserver
    spec:
      containers:
      - args:
        - run
        env:
        {{- include "envVars" $envVars | indent 8 | trimPrefix (repeat 8 " ") }}
        image: {{ $global.Values.const.gitserver.image }}
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: rpc
          timeoutSeconds: 5
        name: gitserver
        ports:
        - containerPort: 3178
          name: rpc
        {{- include "resourceRequirements" (list $global.Values "gitserver" "gitserver") | nindent 8 }}
        volumeMounts:
        {{- include "commonVolumeMounts" $global | indent 8 | trimPrefix (repeat 8 " ") }}
        - mountPath: /etc/sourcegraph
          name: sg-config
        - mountPath: /data/repos
          name: repos
        {{- if $global.Values.cluster.gitserver.ssh }}
        - mountPath: /root/.ssh
          name: ssh
        {{ end }}
      {{- include "jaeger" $global | nindent 6 | trimSuffix "\n      " }}
      {{- include "nodeSelector" (list $global.Values "gitserver") | nindent 6 | trimSuffix "\n      " }}
      {{- include "securityContext" $global | nindent 6 | trimSuffix "\n      " }}
      volumes:
      {{- include "commonVolumes" $global | indent 6 | trimPrefix (repeat 6 " ") }}
      - configMap:
          defaultMode: {{ $global.Values.cluster.configVolume.defaultMode }}
          name: config-file
        name: sg-config
      - name: repos
      {{- if $global.Values.cluster.gitserver.ssh }}
      - name: ssh
        secret:
          defaultMode: 384
          secretName: gitserver-ssh
      {{ end }}
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ $global.Values.cluster.storageClass.name }}
      name: repos
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ required ".Values.cluster.gitserver.diskSize is required" $global.Values.cluster.gitserver.diskSize }}
